openapi: 3.0.3
info:
  title: Norma Controller API
  description: API for managing and retrieving norma data, including fetching articles, Brocardi information, and exporting PDFs.
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local server

tags:
  - name: Home
    description: Home page
  - name: Norma
    description: Operations related to norma data
  - name: History
    description: Retrieve history of requests
  - name: PDF
    description: Export data as PDF

paths:
  /:
    get:
      tags:
        - Home
      summary: Render the home page
      responses:
        '200':
          description: Successfully rendered home page
          content:
            text/html:
              schema:
                type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /fetch_norma_data:
    post:
      tags:
        - Norma
      summary: Fetch norma data based on provided parameters
      requestBody:
        description: Norma request payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NormaRequest'
      responses:
        '200':
          description: Successfully fetched norma data
          content:
            application/json:
              schema:
                type: object
                properties:
                  norma_data:
                    type: array
                    items:
                      $ref: '#/components/schemas/NormaVisitata'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /fetch_article_text:
    post:
      tags:
        - Norma
      summary: Fetch article text based on provided norma data
      requestBody:
        description: Norma request payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NormaRequest'
      responses:
        '200':
          description: Successfully fetched article texts
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/ArticleTextResponse'
                    - $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /fetch_brocardi_info:
    post:
      tags:
        - Norma
      summary: Fetch Brocardi information based on provided norma data
      requestBody:
        description: Norma request payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NormaRequest'
      responses:
        '200':
          description: Successfully fetched Brocardi information
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/BrocardiInfoResponse'
                    - $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /fetch_all_data:
    post:
      tags:
        - Norma
      summary: Fetch all data (article text and Brocardi info) based on provided norma data
      requestBody:
        description: Norma request payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NormaRequest'
      responses:
        '200':
          description: Successfully fetched all data
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/AllDataResponse'
                    - $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /history:
    get:
      tags:
        - History
      summary: Retrieve the history of requests
      responses:
        '200':
          description: Successfully retrieved history
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /export_pdf:
    post:
      tags:
        - PDF
      summary: Export data as a PDF file
      requestBody:
        description: Data required to generate the PDF
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                urn:
                  type: string
                  description: Unique Reference Number for the PDF
              required:
                - urn
      responses:
        '200':
          description: PDF file generated and sent
          content:
            application/pdf:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Indicates if the content is expected to be displayed inline or as an attachment.
              schema:
                type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    NormaRequest:
      type: object
      properties:
        act_type:
          type: string
          description: Type of the act (e.g., legge, decreto legge)
          enum:
            - legge
            - decreto legge
            - decreto legislativo
            - d.p.r.
            - regio decreto
            - tue
            - tfue
            - cdfue
            - regolamento ue
            - direttiva ue
            - codice civile
            - codice penale
            - codice di procedura civile
            - codice di procedura civile
            - CFDUE
        date:
          type: string
          format: date
          description: Date of the act
        act_number:
          type: string
          description: Number of the act
        article:
          type: string
          description: Article number(s) to fetch
        version:
          type: string
          description: Version of the act
        version_date:
          type: string
          format: date
          description: Date of the version
        annex:
          type: string
          description: Annex information
      required:
        - act_type
        - article

    Norma:
      type: object
      properties:
        tipo_atto:
          type: string
          description: Type of the act
        data:
          type: string
          format: date
          description: Date of the act
        numero_atto:
          type: string
          description: Number of the act
      required:
        - tipo_atto
        - data

    NormaVisitata:
      type: object
      properties:
        norma:
          $ref: '#/components/schemas/Norma'
        numero_articolo:
          type: string
          description: Article number
        versione:
          type: string
          description: Version of the act
        data_versione:
          type: string
          format: date
          description: Date of the version
        allegato:
          type: string
          description: Annex information
      required:
        - norma
        - numero_articolo

    ArticleTextResponse:
      type: object
      properties:
        article_text:
          type: string
          description: Text of the article
        norma_data:
          $ref: '#/components/schemas/NormaVisitata'
        url:
          type: string
          format: uri
          description: URL of the document
      required:
        - article_text
        - norma_data
        - url

    BrocardiInfo:
      type: object
      properties:
        position:
          type: string
          nullable: true
          description: Position information
        link:
          type: string
          format: uri
          nullable: true
          description: Link to more information
        Brocardi:
          type: string
          nullable: true
          description: Brocardi information
        Ratio:
          type: string
          nullable: true
          description: Ratio information
        Spiegazione:
          type: string
          nullable: true
          description: Explanation
        Massime:
          type: string
          nullable: true
          description: Maxims
      description: Brocardi information related to a norma

    BrocardiInfoResponse:
      type: object
      properties:
        norma_data:
          $ref: '#/components/schemas/NormaVisitata'
        brocardi_info:
          $ref: '#/components/schemas/BrocardiInfo'
      required:
        - norma_data
        - brocardi_info

    AllDataResponse:
      type: object
      properties:
        article_text:
          type: string
          description: Text of the article
        url:
          type: string
          format: uri
          description: URL of the document
        norma_data:
          $ref: '#/components/schemas/NormaVisitata'
        brocardi_info:
          oneOf:
            - $ref: '#/components/schemas/BrocardiInfo'
            - type: object
              properties:
                error:
                  type: string
                  description: Error message
          nullable: true
      required:
        - article_text
        - url
        - norma_data

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error

  responses:
    RateLimitExceeded:
      description: Rate limit has been exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

security:
  - RateLimit: []

